#!/bin/bash
(make clean; make) || exit 1

total=0
totalmax=0

rm -f total.txt *.out

# Test driver
function runtest {
 prog=$1
  args=$2
  testinput=$3
  testname=$4
  grade=$5

  totalmax=`expr $totalmax + $grade`;
  inputdescr=
  if [ "$testinput" != "none" ]; then
      inputdescr="  $testinput"
  fi
  descr="$prog $testname"

  echo "======= $descr ==========="

  #Run tested program
  timeout 30 ./$prog $testinput $args > $prog.out
  errorcode=$?
  echo $errorcode
  if [ $? -ne 0 ]; then
     echo Cannot run ./$prog
     cat $prog.out
     echo "*****Test Failed*****";
     return
  fi

  #Run original program
  ./$prog.org $testinput $args > $prog.org.out
  orgerrorcode=$?
  echo $orgechocode
  if [ $? -ne 0 ]; then
     echo Cannot run ./$prog.org
     cat $prog.org.out
     echo "*****Test Failed*****";
     return
  fi

  #if [ $errorcode -ne $orgerrorcode ]; then
  #    echo Error codes do not match
  #    echo "*****Test Failed*****";
  #    return
  #fi

  diff $prog.out $prog.org.out > diff.out
  if [ $? -eq 0 ]; then
      cat $prog.out
      echo Test passed...;
      printf "%-36s: %-3d of %-3d\n" "$descr " $grade $grade >> total.txt
      total=`expr $total + $grade`;
  else
      echo "*****Test Failed*****";
      echo ------ Your Output ----------
      cat $prog.out
      echo ------ Expected Output ------
      cat $prog.org.out
      echo ------ Difference -----------
      cat diff.out
      echo -----------------------------
      printf "%-36s: %-3d of %-3d\n" "$descr " 0 $grade >> total.txt
  fi
  echo
}

if [[ $1 != '' ]]
then
	
	echo $1
	 
	case $1 in 
   test1)  
		echo $1
		runtest word_count "" "test/test1" "test1" 1
      ;; 
   test2)
		echo $1
		runtest word_count "" "test/test2" "test2" 1
      ;; 
   test3)
		echo $1
		runtest word_count "" "test/test3" "test3" 1
      ;; 
   test4)
		echo $1
		runtest word_count "" "test/test4" "test4" 1
      ;; 
   test5)
		echo $1
		runtest word_count "" "test/test5" "test5" 1
      ;; 
   test6)
		echo $1
		runtest word_count "" "test/test6" "test6" 1
      ;; 
   testargs)
		echo $1
		runtest word_count "" "" "testargs" 1
      ;; 
   testhelp)
		echo $1
		runtest word_count "--help" "" "testhelp" 1
      ;; 
   testlexsort)
		echo $1
		runtest word_count "--sort-lex" "test/test6" "testlexsort" 1
      ;; 
   testnumsort)
		echo $1
		runtest word_count "--sort-num" "test/test6" "testnumsort" 2
      ;; 
   testhist)
		echo $1
		runtest word_count "--histogram" "test/test6" "testhist" 4
      ;; 
   testsortedhist1)
		echo $1
		runtest word_count "--sort-lex --histogram" "test/test6" "testsortedhist1" 3
      ;; 
   testsortedhist2)
		echo $1
		runtest word_count "--sort-lex --histogram" "test/test6" "testsortedhist2" 3
      ;;
   
	esac
else



# List of tests running
# basic tests
	runtest word_count "" "test/test1" "test1" 1
	runtest word_count "" "test/test2" "test2" 1
	runtest word_count "" "test/test3" "test3" 1
	runtest word_count "" "test/test4" "test4" 1
	runtest word_count "" "test/test5" "test5" 1
	runtest word_count "" "test/test6" "test6" 1

# tests with flags
	runtest word_count "" "" "testargs" 1
	runtest word_count "--help" "" "testhelp" 1

# tests with flags
	runtest word_count "--sort-lex" "test/test6" "testlexsort" 1
	runtest word_count "--sort-num" "test/test6" "testnumsort" 2
	runtest word_count "--histogram" "test/test6" "testhist" 4
	runtest word_count "--sort-lex --histogram" "test/test6" "testsortedhist1" 3
	runtest word_count "--sort-num --histogram" "test/test6" "testsortedhist2" 3

fi

echo > total.out
echo >> total.out
echo   "-------------------------------------------------" >> total.out
echo   "CS240: Lab 10. $USER   " >> total.out
date >> total.out
echo   "-------------------------------------------------" >> total.out
cat total.txt >> total.out >> total.out
echo   "-------------------------------------------------" >> total.out
echo   "CS240: Lab 10. $USER" `date` " Total: " $total of $totalmax >> total.out
echo >> total.out



cat total.out

echo "TO TEST BY EACH TEST: Usage: ./testall testName [options: test1,test2,test3,test4,test5,test6,testargs,testlexsort,testnumsort,testhist,testsortedhist1,testsortedhist2]"

rm total.txt diff.out
